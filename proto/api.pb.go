// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: proto/api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Type
type GoCaptchaType int32

const (
	GoCaptchaType_GoCaptchaTypeClick      GoCaptchaType = 0
	GoCaptchaType_GoCaptchaTypeClickShape GoCaptchaType = 1
	GoCaptchaType_GoCaptchaTypeSlide      GoCaptchaType = 2
	GoCaptchaType_GoCaptchaTypeDrag       GoCaptchaType = 3
	GoCaptchaType_GoCaptchaTypeRotate     GoCaptchaType = 4
)

// Enum value maps for GoCaptchaType.
var (
	GoCaptchaType_name = map[int32]string{
		0: "GoCaptchaTypeClick",
		1: "GoCaptchaTypeClickShape",
		2: "GoCaptchaTypeSlide",
		3: "GoCaptchaTypeDrag",
		4: "GoCaptchaTypeRotate",
	}
	GoCaptchaType_value = map[string]int32{
		"GoCaptchaTypeClick":      0,
		"GoCaptchaTypeClickShape": 1,
		"GoCaptchaTypeSlide":      2,
		"GoCaptchaTypeDrag":       3,
		"GoCaptchaTypeRotate":     4,
	}
)

func (x GoCaptchaType) Enum() *GoCaptchaType {
	p := new(GoCaptchaType)
	*p = x
	return p
}

func (x GoCaptchaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoCaptchaType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[0].Descriptor()
}

func (GoCaptchaType) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[0]
}

func (x GoCaptchaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoCaptchaType.Descriptor instead.
func (GoCaptchaType) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

// Theme
type GoCaptchaTheme int32

const (
	GoCaptchaTheme_GoCaptchaThemeDefault GoCaptchaTheme = 0
	GoCaptchaTheme_GoCaptchaThemeDark    GoCaptchaTheme = 1
)

// Enum value maps for GoCaptchaTheme.
var (
	GoCaptchaTheme_name = map[int32]string{
		0: "GoCaptchaThemeDefault",
		1: "GoCaptchaThemeDark",
	}
	GoCaptchaTheme_value = map[string]int32{
		"GoCaptchaThemeDefault": 0,
		"GoCaptchaThemeDark":    1,
	}
)

func (x GoCaptchaTheme) Enum() *GoCaptchaTheme {
	p := new(GoCaptchaTheme)
	*p = x
	return p
}

func (x GoCaptchaTheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoCaptchaTheme) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[1].Descriptor()
}

func (GoCaptchaTheme) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[1]
}

func (x GoCaptchaTheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoCaptchaTheme.Descriptor instead.
func (GoCaptchaTheme) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

// Lang
type GoCaptchaLang int32

const (
	GoCaptchaLang_GoCaptchaLangDefault GoCaptchaLang = 0
	GoCaptchaLang_GoCaptchaLangEnglish GoCaptchaLang = 1
)

// Enum value maps for GoCaptchaLang.
var (
	GoCaptchaLang_name = map[int32]string{
		0: "GoCaptchaLangDefault",
		1: "GoCaptchaLangEnglish",
	}
	GoCaptchaLang_value = map[string]int32{
		"GoCaptchaLangDefault": 0,
		"GoCaptchaLangEnglish": 1,
	}
)

func (x GoCaptchaLang) Enum() *GoCaptchaLang {
	p := new(GoCaptchaLang)
	*p = x
	return p
}

func (x GoCaptchaLang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GoCaptchaLang) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_api_proto_enumTypes[2].Descriptor()
}

func (GoCaptchaLang) Type() protoreflect.EnumType {
	return &file_proto_api_proto_enumTypes[2]
}

func (x GoCaptchaLang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GoCaptchaLang.Descriptor instead.
func (GoCaptchaLang) EnumDescriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

type GetDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  GoCaptchaType   `protobuf:"varint,1,opt,name=type,proto3,enum=gocaptcha.GoCaptchaType" json:"type,omitempty"`
	Theme *GoCaptchaTheme `protobuf:"varint,2,opt,name=theme,proto3,enum=gocaptcha.GoCaptchaTheme,oneof" json:"theme,omitempty"`
	Lang  *GoCaptchaLang  `protobuf:"varint,3,opt,name=lang,proto3,enum=gocaptcha.GoCaptchaLang,oneof" json:"lang,omitempty"`
}

func (x *GetDataRequest) Reset() {
	*x = GetDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataRequest) ProtoMessage() {}

func (x *GetDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataRequest.ProtoReflect.Descriptor instead.
func (*GetDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{0}
}

func (x *GetDataRequest) GetType() GoCaptchaType {
	if x != nil {
		return x.Type
	}
	return GoCaptchaType_GoCaptchaTypeClick
}

func (x *GetDataRequest) GetTheme() GoCaptchaTheme {
	if x != nil && x.Theme != nil {
		return *x.Theme
	}
	return GoCaptchaTheme_GoCaptchaThemeDefault
}

func (x *GetDataRequest) GetLang() GoCaptchaLang {
	if x != nil && x.Lang != nil {
		return *x.Lang
	}
	return GoCaptchaLang_GoCaptchaLangDefault
}

type GetDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              int32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message           string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type              GoCaptchaType `protobuf:"varint,3,opt,name=type,proto3,enum=gocaptcha.GoCaptchaType" json:"type,omitempty"`
	CaptchaKey        string        `protobuf:"bytes,4,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	MasterImageBase64 string        `protobuf:"bytes,5,opt,name=masterImageBase64,proto3" json:"masterImageBase64,omitempty"`
	ThumbImageBase64  string        `protobuf:"bytes,6,opt,name=thumbImageBase64,proto3" json:"thumbImageBase64,omitempty"`
	MasterWidth       int32         `protobuf:"varint,7,opt,name=masterWidth,proto3" json:"masterWidth,omitempty"`
	MasterHeight      int32         `protobuf:"varint,8,opt,name=masterHeight,proto3" json:"masterHeight,omitempty"`
	ThumbWidth        int32         `protobuf:"varint,9,opt,name=thumbWidth,proto3" json:"thumbWidth,omitempty"`
	ThumbHeight       int32         `protobuf:"varint,10,opt,name=thumbHeight,proto3" json:"thumbHeight,omitempty"`
	ThumbSize         int32         `protobuf:"varint,11,opt,name=thumbSize,proto3" json:"thumbSize,omitempty"`
	DisplayX          int32         `protobuf:"varint,12,opt,name=displayX,proto3" json:"displayX,omitempty"`
	DisplayY          int32         `protobuf:"varint,13,opt,name=displayY,proto3" json:"displayY,omitempty"`
}

func (x *GetDataResponse) Reset() {
	*x = GetDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataResponse) ProtoMessage() {}

func (x *GetDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataResponse.ProtoReflect.Descriptor instead.
func (*GetDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{1}
}

func (x *GetDataResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDataResponse) GetType() GoCaptchaType {
	if x != nil {
		return x.Type
	}
	return GoCaptchaType_GoCaptchaTypeClick
}

func (x *GetDataResponse) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *GetDataResponse) GetMasterImageBase64() string {
	if x != nil {
		return x.MasterImageBase64
	}
	return ""
}

func (x *GetDataResponse) GetThumbImageBase64() string {
	if x != nil {
		return x.ThumbImageBase64
	}
	return ""
}

func (x *GetDataResponse) GetMasterWidth() int32 {
	if x != nil {
		return x.MasterWidth
	}
	return 0
}

func (x *GetDataResponse) GetMasterHeight() int32 {
	if x != nil {
		return x.MasterHeight
	}
	return 0
}

func (x *GetDataResponse) GetThumbWidth() int32 {
	if x != nil {
		return x.ThumbWidth
	}
	return 0
}

func (x *GetDataResponse) GetThumbHeight() int32 {
	if x != nil {
		return x.ThumbHeight
	}
	return 0
}

func (x *GetDataResponse) GetThumbSize() int32 {
	if x != nil {
		return x.ThumbSize
	}
	return 0
}

func (x *GetDataResponse) GetDisplayX() int32 {
	if x != nil {
		return x.DisplayX
	}
	return 0
}

func (x *GetDataResponse) GetDisplayY() int32 {
	if x != nil {
		return x.DisplayY
	}
	return 0
}

type CheckDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       GoCaptchaType `protobuf:"varint,1,opt,name=type,proto3,enum=gocaptcha.GoCaptchaType" json:"type,omitempty"`
	CaptchaKey string        `protobuf:"bytes,2,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
	Value      string        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CheckDataRequest) Reset() {
	*x = CheckDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataRequest) ProtoMessage() {}

func (x *CheckDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataRequest.ProtoReflect.Descriptor instead.
func (*CheckDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{2}
}

func (x *CheckDataRequest) GetType() GoCaptchaType {
	if x != nil {
		return x.Type
	}
	return GoCaptchaType_GoCaptchaTypeClick
}

func (x *CheckDataRequest) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

func (x *CheckDataRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CheckDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CheckDataResponse) Reset() {
	*x = CheckDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataResponse) ProtoMessage() {}

func (x *CheckDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataResponse.ProtoReflect.Descriptor instead.
func (*CheckDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{3}
}

func (x *CheckDataResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckDataResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type StatusInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptchaKey string `protobuf:"bytes,1,opt,name=captchaKey,proto3" json:"captchaKey,omitempty"`
}

func (x *StatusInfoRequest) Reset() {
	*x = StatusInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfoRequest) ProtoMessage() {}

func (x *StatusInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfoRequest.ProtoReflect.Descriptor instead.
func (*StatusInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{4}
}

func (x *StatusInfoRequest) GetCaptchaKey() string {
	if x != nil {
		return x.CaptchaKey
	}
	return ""
}

type StatusInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StatusInfoResponse) Reset() {
	*x = StatusInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInfoResponse) ProtoMessage() {}

func (x *StatusInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInfoResponse.ProtoReflect.Descriptor instead.
func (*StatusInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_api_proto_rawDescGZIP(), []int{5}
}

func (x *StatusInfoResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StatusInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StatusInfoResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_proto_api_proto protoreflect.FileDescriptor

var file_proto_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0xba, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74,
	0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a,
	0x05, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47, 0x6f,
	0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4c, 0x61, 0x6e, 0x67, 0x48, 0x01, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0xc5, 0x03, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x36, 0x34, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x68, 0x75, 0x6d, 0x62, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x58, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x58, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x59, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x59, 0x22, 0x76, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e,
	0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x55, 0x0a, 0x11, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x33, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x4b, 0x65, 0x79, 0x22, 0x56, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x8c, 0x01,
	0x0a, 0x0d, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x12, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x6f, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x79, 0x70, 0x65, 0x44, 0x72, 0x61,
	0x67, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x10, 0x04, 0x2a, 0x43, 0x0a, 0x0e,
	0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x15, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x6f, 0x43,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x44, 0x61, 0x72, 0x6b, 0x10,
	0x01, 0x2a, 0x43, 0x0a, 0x0d, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4c, 0x61,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4c,
	0x61, 0x6e, 0x67, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x47, 0x6f, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x4c, 0x61, 0x6e, 0x67, 0x45, 0x6e, 0x67,
	0x6c, 0x69, 0x73, 0x68, 0x10, 0x01, 0x32, 0x8e, 0x03, 0x0a, 0x10, 0x47, 0x6f, 0x43, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x48, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x67,
	0x6f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61,
	0x70, 0x74, 0x63, 0x68, 0x61, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70,
	0x74, 0x63, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x6f, 0x63, 0x61, 0x70, 0x74, 0x63,
	0x68, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_api_proto_rawDescOnce sync.Once
	file_proto_api_proto_rawDescData = file_proto_api_proto_rawDesc
)

func file_proto_api_proto_rawDescGZIP() []byte {
	file_proto_api_proto_rawDescOnce.Do(func() {
		file_proto_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_api_proto_rawDescData)
	})
	return file_proto_api_proto_rawDescData
}

var file_proto_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_api_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_api_proto_goTypes = []interface{}{
	(GoCaptchaType)(0),         // 0: gocaptcha.GoCaptchaType
	(GoCaptchaTheme)(0),        // 1: gocaptcha.GoCaptchaTheme
	(GoCaptchaLang)(0),         // 2: gocaptcha.GoCaptchaLang
	(*GetDataRequest)(nil),     // 3: gocaptcha.GetDataRequest
	(*GetDataResponse)(nil),    // 4: gocaptcha.GetDataResponse
	(*CheckDataRequest)(nil),   // 5: gocaptcha.CheckDataRequest
	(*CheckDataResponse)(nil),  // 6: gocaptcha.CheckDataResponse
	(*StatusInfoRequest)(nil),  // 7: gocaptcha.StatusInfoRequest
	(*StatusInfoResponse)(nil), // 8: gocaptcha.StatusInfoResponse
}
var file_proto_api_proto_depIdxs = []int32{
	0,  // 0: gocaptcha.GetDataRequest.type:type_name -> gocaptcha.GoCaptchaType
	1,  // 1: gocaptcha.GetDataRequest.theme:type_name -> gocaptcha.GoCaptchaTheme
	2,  // 2: gocaptcha.GetDataRequest.lang:type_name -> gocaptcha.GoCaptchaLang
	0,  // 3: gocaptcha.GetDataResponse.type:type_name -> gocaptcha.GoCaptchaType
	0,  // 4: gocaptcha.CheckDataRequest.type:type_name -> gocaptcha.GoCaptchaType
	3,  // 5: gocaptcha.GoCaptchaService.GetData:input_type -> gocaptcha.GetDataRequest
	5,  // 6: gocaptcha.GoCaptchaService.CheckData:input_type -> gocaptcha.CheckDataRequest
	7,  // 7: gocaptcha.GoCaptchaService.CheckStatus:input_type -> gocaptcha.StatusInfoRequest
	7,  // 8: gocaptcha.GoCaptchaService.GetStatusInfo:input_type -> gocaptcha.StatusInfoRequest
	7,  // 9: gocaptcha.GoCaptchaService.DelStatusInfo:input_type -> gocaptcha.StatusInfoRequest
	4,  // 10: gocaptcha.GoCaptchaService.GetData:output_type -> gocaptcha.GetDataResponse
	6,  // 11: gocaptcha.GoCaptchaService.CheckData:output_type -> gocaptcha.CheckDataResponse
	8,  // 12: gocaptcha.GoCaptchaService.CheckStatus:output_type -> gocaptcha.StatusInfoResponse
	8,  // 13: gocaptcha.GoCaptchaService.GetStatusInfo:output_type -> gocaptcha.StatusInfoResponse
	8,  // 14: gocaptcha.GoCaptchaService.DelStatusInfo:output_type -> gocaptcha.StatusInfoResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_api_proto_init() }
func file_proto_api_proto_init() {
	if File_proto_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_api_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_api_proto_goTypes,
		DependencyIndexes: file_proto_api_proto_depIdxs,
		EnumInfos:         file_proto_api_proto_enumTypes,
		MessageInfos:      file_proto_api_proto_msgTypes,
	}.Build()
	File_proto_api_proto = out.File
	file_proto_api_proto_rawDesc = nil
	file_proto_api_proto_goTypes = nil
	file_proto_api_proto_depIdxs = nil
}
